// Copyright (c) Sammi Husky. All rights reserved.
// Licensed under the MIT license. See LICENSE file in the project root for full license information.

using System.Collections.Generic;

namespace SALT.Moveset.MSC
{
    public static class MSC_INFO
    {
        public static Dictionary<uint, string> NAMES = new Dictionary<uint, string>()
        {
            {0x00, "nop"},
            {0x02, "begin"},
            {0x03, "end"},
            {0x04, "jump4"},
            {0x05, "jump5"},
            {0x06, "return6"},
            {0x07, "return7"},
            {0x08, "return8"},
            {0x09, "return9"},
            {0x0a, "pushInt"},
            {0x0b, "pushVar"},
            {0x0c, "assert"},
            {0x0d, "pushShort"},
            {0x0e, "addi"},
            {0x0f, "subi"},
            {0x10, "mult"},
            {0x11, "divi"},
            {0x12, "modi"},
            {0x13, "negi"},
            {0x14, "inci"},
            {0x15, "deci"},
            {0x16, "and"},
            {0x17, "or"},
            {0x18, "not"},
            {0x19, "xor"},
            {0x1a, "shl"},
            {0x1b, "shr"},
            {0x1c, "set"},
            {0x1d, "addu"},
            {0x1e, "subu"},
            {0x1f, "mulu"},
            {0x20, "divu"},
            {0x21, "modu"},
            {0x22, "andu"},
            {0x23, "oru"},
            {0x24, "xoru"},
            {0x25, "equal"},
            {0x26, "notEqual"},
            {0x27, "lessThan"},
            {0x28, "lessOrEqual"},
            {0x29, "greater"},
            {0x2a, "greaterOrEqual"},
            {0x2b, "isZero"},
            {0x2c, "printf"},
            {0x2d, "sys"},
            {0x2e, "unk_2E"},
            {0x2f, "Call2"},
            {0x30, "call3"},
            {0x31, "Call4"},
            {0x32, "push"},
            {0x33, "pop"},
            {0x34, "if"},
            {0x35, "ifNot"},
            {0x36, "else"},
            {0x37, "assert_37"},
            {0x38, "intToFloat"},
            {0x39, "floatToInt"},
            {0x3a, "addf"},
            {0x3b, "subf"},
            {0x3c, "multf"},
            {0x3d, "divf"},
            {0x3e, "negf"},
            {0x3f, "finc"},
            {0x40, "fdec"},
            {0x41, "fset"},
            {0x42, "addfu"},
            {0x43, "subfu"},
            {0x44, "multfu"},
            {0x45, "divfu"},
            {0x46, "fEquals"},
            {0x47, "fNotEqual"},
            {0x48, "fLessThan"},
            {0x49, "fLessOrEqual"},
            {0x4a, "fGreaterThan"},
            {0x4b, "fGreaterOrEqual"},
            {0x4c, "assert_4C"},
            {0x4d, "exit"}
        };

        public static Dictionary<uint, string> FORMATS = new Dictionary<uint, string>()
        {
            {0x00, string.Empty},
            {0x02, "B,B,B,B"},
            {0x03, string.Empty},
            {0x04, "I"},
            {0x05, string.Empty},
            {0x06, string.Empty},
            {0x07, string.Empty},
            {0x08, string.Empty},
            {0x09, string.Empty},
            {0x0a, "I"},
            {0x0b, "B,B,B"},
            {0x0c, string.Empty},
            {0x0d, "H"},
            {0x0e, string.Empty},
            {0x0f, string.Empty},
            {0x10, string.Empty},
            {0x11, string.Empty},
            {0x12, string.Empty},
            {0x13, string.Empty},
            {0x14, "B,B,B"},
            {0x15, "B,B,B"},
            {0x16, string.Empty},
            {0x17, string.Empty},
            {0x18, string.Empty},
            {0x19, string.Empty},
            {0x1a, string.Empty},
            {0x1b, string.Empty},
            {0x1c, "B,B,B"},
            {0x1d, "B,B,B"},
            {0x1e, "B,B,B"},
            {0x1f, "B,B,B"},
            {0x20, "B,B,B"},
            {0x21, "B,B,B"},
            {0x22, "B,B,B"},
            {0x23, "B,B,B"},
            {0x24, "B,B,B"},
            {0x25, string.Empty},
            {0x26, string.Empty},
            {0x27, string.Empty},
            {0x28, string.Empty},
            {0x29, string.Empty},
            {0x2a, string.Empty},
            {0x2b, string.Empty},
            {0x2c, "B"},
            {0x2d, "B,B"},
            {0x2e, "I"},
            {0x2f, "B"},
            {0x30, "B"},
            {0x31, "B"},
            {0x32, string.Empty},
            {0x33, string.Empty},
            {0x34, "I"},
            {0x35, "I"},
            {0x36, "I"},
            {0x37, string.Empty},
            {0x38, "B"},
            {0x39, "B"},
            {0x3a, string.Empty},
            {0x3b, string.Empty},
            {0x3c, string.Empty},
            {0x3d, string.Empty},
            {0x3e, string.Empty},
            {0x3f, "B,B,B"},
            {0x40, "B,B,B"},
            {0x41, "B,B,B"},
            {0x42, "B,B,B"},
            {0x43, "B,B,B"},
            {0x44, "B,B,B"},
            {0x45, "B,B,B"},
            {0x46, string.Empty},
            {0x47, string.Empty},
            {0x48, string.Empty},
            {0x49, string.Empty},
            {0x4a, string.Empty},
            {0x4b, string.Empty},
            {0x4c, string.Empty},
            {0x4d, string.Empty}
        };
    }
}
